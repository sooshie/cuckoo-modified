# Enable or disable the available reporting modules [on/off].
# If you add a custom reporting module to your Cuckoo setup, you have to add
# a dedicated entry in this file, or it won't be executed.
# You can also add additional options under the section of your module and
# they will be available in your Python class.

[jsondump]
enabled = yes
# use the c-optimized JSON encoder, requires fitting entire JSON results in memory
ram_boost = yes
indent = 4
encoding = latin-1

[reporthtml]
# required for the WSGI interface
enabled = no

[reporthtmlsummary]
# much smaller, faster report generation, omits API logs and is non-interactive
enabled = no

[reportpdf]
# Note that this requires reporthtmlsummary to be enabled above as well
enabled = no


[mmdef]
enabled = no

[maec41]
enabled = no
mode = overview
processtree = true
output_handles = false
static = true
strings = true
virustotal = true
deduplicate = true

[mongodb]
enabled = no
host = 127.0.0.1
port = 27017
db = cuckoo
# Automatically delete large dict values that exceed mongos 16MB limitation
# Note: This only deletes dict keys from data stored in MongoDB. You would
# still get the full dataset if you parsed the results dict in another
# reporting module or from the jsondump module.
fix_large_docs = yes

# Use ElasticSearch as the "database" which powers Django.
# NOTE: If this is enabled, MongoDB should not be enabled.
[elasticsearchdb]
enabled = no
host = 127.0.0.1
port = 9200
# The report data is indexed in the form of {{index-yyyy.mm.dd}}
# so the below index configuration option is actually an index 'prefix'.
index = cuckoo

# Use AWS S3 to store report data, samples, pcaps, etc... This can be used
# With either ElasticSearch or Mongo as well, searching will happen in ES or 
# Mongo and the rest of the UI will be driven from AWS
# You'll need to create your own S3 buckets and make sure the access_key has
# the appropriate perms to access the buckets.
[aws]
enabled = no
s3_region = us-west-2
access_key = YOURACCESSKEY
secret_key = YOURSECRETKEY
reports_bucket = cuckoo.reports.bucket
shots_bucket = cuckoo.shots.bucket
samples_bucket = cuckoo.samples.bucket
files_bucket = cuckoo.files.bucket
aux_bucket = cuckoo.aux.bucket
logs_bucket = cuckoo.logs.bucket
pcap_bucket = cuckoo.pcaps.bucket
md5_bucket = cuckoo.md5.bucket
# If the below is set to true, it will remove all the data from the local FS so you
# have to manage local disk usage less.
cleanup = true

[retention]
enabled = no
# The amount of days old a task needs to be before deleting data
# Set a value to no to never delete it
memory = 14
procmemory = 62
pcap = 62
sortedpcap = 14
bsonlogs = 62
dropped = 62
screencaps = 62
reports = 62
mongo = 731
elastic = no
malheur = no

[syslog]
enabled = no
# IP of your syslog server/listener
host = x.x.x.x
# Port of your syslog server/listener
port = 514
# Protocol to send data over
protocol = tcp
# Store a logfile? [in reports directory]
logfile = yes
# if yes, what logname? [Default: syslog.txt]
logname = syslog.log

[moloch]
enabled = no
base = https://172.18.100.105:8005/
node = cuckoo3
capture = /data/moloch/bin/moloch-capture
captureconf = /data/moloch/etc/config.ini
user = admin
pass = admin
realm = Moloch

[resubmitexe]
enabled = no
resublimit = 5

[malheur]
enabled = no

[compression]
enabled = yes
zipmemdump = yes
zipmemstrings = yes
zipprocdump = yes
zipprocstrings = yes

